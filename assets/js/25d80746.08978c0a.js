"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5833],{696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=n(4848),i=n(8453);const s={sidebar_position:1},o="Treesitter",c={id:"Neovim/Plugins/treesitter",title:"Treesitter",description:"Neovim \u628a tree-sitter \u6574\u5408\u9032\u4f86\uff0cNeovim \u539f\u751f\u5305\u542b\u4e86 C\u3001Lua\u3001 Markdown \u7b49\u8a9e\u8a00\u7684 parser\uff0c\u800c nvim-treesitter \u9019\u500b\u5957\u4ef6\u53ef\u4ee5\u7528\u4f86\u5b89\u88dd\u5176\u5b83\u8a9e\u8a00\u7684 parser \u4e26\u5c0d tree-sitter \u4f7f\u7528\u8a2d\u5b9a\u9032\u884c\u8a2d\u5b9a\u3002\u800c nvim-treesitter-textobjects \u9019\u500b\u5957\u4ef6\u7d50\u5408\u4e86 vi \u4e2d text objects \u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u5c0d parse \u51fa\u7684 nodes \u9032\u884c\u66f4\u591a\u7684\u64cd\u4f5c\u3002",source:"@site/docs/Neovim/Plugins/treesitter.md",sourceDirName:"Neovim/Plugins",slug:"/Neovim/Plugins/treesitter",permalink:"/docs/Neovim/Plugins/treesitter",draft:!1,unlisted:!1,editUrl:"https://github.com/cpching/docs/Neovim/Plugins/treesitter.md",tags:[],version:"current",lastUpdatedAt:1726575185e3,sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Plugin Manager: Lazy",permalink:"/docs/Neovim/plugin-manager-lazy"},next:{title:"file-exploer-tree",permalink:"/docs/Neovim/Plugins/file-exploer-tree"}},a={},l=[{value:"nvim-treesitter",id:"nvim-treesitter",level:2},{value:"nvim-treesitter-textobjects",id:"nvim-treesitter-textobjects",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"treesitter",children:"Treesitter"}),"\n",(0,r.jsxs)(t.p,{children:["Neovim \u628a ",(0,r.jsx)(t.a,{href:"https://tree-sitter.github.io/tree-sitter/",children:"tree-sitter"})," \u6574\u5408\u9032\u4f86\uff0cNeovim \u539f\u751f\u5305\u542b\u4e86 ",(0,r.jsx)(t.code,{children:"C"}),"\u3001",(0,r.jsx)(t.code,{children:"Lua"}),"\u3001",(0,r.jsx)(t.code,{children:" Markdown"})," \u7b49\u8a9e\u8a00\u7684 parser\uff0c\u800c ",(0,r.jsx)(t.code,{children:"nvim-treesitter"})," \u9019\u500b\u5957\u4ef6\u53ef\u4ee5\u7528\u4f86\u5b89\u88dd\u5176\u5b83\u8a9e\u8a00\u7684 parser \u4e26\u5c0d tree-sitter \u4f7f\u7528\u8a2d\u5b9a\u9032\u884c\u8a2d\u5b9a\u3002\u800c ",(0,r.jsx)(t.code,{children:"nvim-treesitter-textobjects"})," \u9019\u500b\u5957\u4ef6\u7d50\u5408\u4e86 vi \u4e2d ",(0,r.jsx)(t.a,{href:"../basic-ways-to-change-text-in-vi#text-objects",children:"text objects"})," \u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u5c0d parse \u51fa\u7684 nodes \u9032\u884c\u66f4\u591a\u7684\u64cd\u4f5c\u3002"]}),"\n",(0,r.jsx)(t.h2,{id:"nvim-treesitter",children:"nvim-treesitter"}),"\n",(0,r.jsxs)(t.p,{children:["\u5728 ",(0,r.jsx)(t.code,{children:"lua/plugins/"})," \u65b0\u589e\u4e00\u500b\u53eb ",(0,r.jsx)(t.code,{children:"nvim-treesitter.lua"})," \u7684\u6a94\u6848\u5728\u6a94\u6848\u4e2d\u65b0\u589e\u4e00\u500b ",(0,r.jsx)(t.code,{children:"language_parsers"})," \u7684 list \u548c plugin \u7684\u8a2d\u5b9a\u3002\u5132\u5b58\u9000\u51fa\u5f8c\u518d\u9032\u5165 Neovim \u4e26\u900f\u904e ",":Lazy"," \u9032\u5165 Lazy console \u9032\u884c plugin \u5b89\u88dd\u3002"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-lua",children:'local language_parsers = {\n    <language_name_1>, -- e.g. "c"\n    <language_name_2>, -- e.g. "bash"\n    -- ...\n}\n\nreturn {\n    "nvim-treesitter/nvim-treesitter",\n    opts = {\n        ensure_installed = language_parsers,\n        auto_install = true,\n        indent = { enable = true },\n        highlight = { enable = true, },\n        incremental_selection = {\n            enable = true,\n            keymaps = {\n                init_selection = "<CR>",\n                node_incremental = "<CR>",\n                scope_incremental = "<TAB>",\n                node_decremental = "<bs>",\n            },\n        },\n\n    }\n    config = function(_, opts)\n        require("nvim-treesitter.configs").setup(opts)\n    end,\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["\u63a5\u8457\u53ef\u4ee5\u900f\u904e ",(0,r.jsx)(t.code,{children:":InspectTree"})," \u67e5\u770b parser \u6240\u5efa\u7acb\u7684 syntax tree \u7684\u6a23\u5b50\uff0c\u6a39\u4e2d\u7684 nodes \u548c code \u7684\u5167\u5bb9\u6703\u76f8\u4e92\u547c\u61c9\u3002\n",(0,r.jsx)(t.img,{alt:"InspectTree",src:n(9716).A+"",width:"3840",height:"2160"})]}),"\n",(0,r.jsx)(t.h2,{id:"nvim-treesitter-textobjects",children:"nvim-treesitter-textobjects"})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},9716:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/InspectTree-4107ea295e0d732147ba92c6b0b6b470.png"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(6540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);